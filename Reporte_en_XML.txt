import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.transform.OutputKeys;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;

private void guardarXML(DefaultTableModel modelo) {
    JFileChooser fileChooser = new JFileChooser();
    fileChooser.setDialogTitle("Guardar como XML");
    fileChooser.setFileFilter(new FileNameExtensionFilter("XML file (*.xml)", "xml"));
    int userSelection = fileChooser.showSaveDialog(this);

    if (userSelection == JFileChooser.APPROVE_OPTION) {
        File fileToSave = fileChooser.getSelectedFile();
        try {
            DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
            DocumentBuilder dBuilder = dbFactory.newDocumentBuilder();
            Document doc = dBuilder.newDocument();
            
            // Raíz del documento
            Element rootElement = doc.createElement("Ventas");
            doc.appendChild(rootElement);

            // Añadir elementos
            for (int i = 0; i < modelo.getRowCount(); i++) {
                Element venta = doc.createElement("Venta");
                rootElement.appendChild(venta);

                for (int j = 0; j < modelo.getColumnCount(); j++) {
                    Element columna = doc.createElement(modelo.getColumnName(j));
                    columna.appendChild(doc.createTextNode(modelo.getValueAt(i, j).toString()));
                    venta.appendChild(columna);
                }
            }

            // Escribir el contenido en el archivo XML
            TransformerFactory transformerFactory = TransformerFactory.newInstance();
            Transformer transformer = transformerFactory.newTransformer();
            transformer.setOutputProperty(OutputKeys.INDENT, "yes");
            DOMSource source = new DOMSource(doc);
            StreamResult result = new StreamResult(new File(fileToSave.getAbsolutePath() + ".xml"));

            transformer.transform(source, result);
            JOptionPane.showMessageDialog(this, "Archivo XML guardado exitosamente", "Éxito", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error guardando el archivo XML", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
}