private int registrarCliente(String nitCi, String nombre) {
        // Realizar la inserci칩n de los datos del cliente en la tabla "clientes" en la base de datos MySQL
        String url = "jdbc:mysql://MacBook-Pro-de-Neo.local:3306/SIS_Facturacion";
        String usuario = "Neoar2000";
        String contrase침a = "Guitarhero3-*$.";
        String sql = "INSERT INTO clientes (nit_ci, nombre) VALUES (?, ?)";
    
        int idCliente = -1; // Inicializar el id del cliente como -1, indicando que no se pudo registrar el cliente
    
        try (Connection conn = DriverManager.getConnection(url, usuario, contrase침a);
             PreparedStatement pstmt = conn.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS)) {
    
            pstmt.setString(1, nitCi);
            pstmt.setString(2, nombre);
    
            int filasInsertadas = pstmt.executeUpdate();
            if (filasInsertadas > 0) {
                // Obtener el ID generado autom치ticamente para el cliente insertado
                ResultSet generatedKeys = pstmt.getGeneratedKeys();
                if (generatedKeys.next()) {
                    idCliente = generatedKeys.getInt(1); // Obtener el valor del ID generado
                    System.out.println("Cliente registrado exitosamente en la base de datos. ID: " + idCliente);
                }
            } else {
                System.out.println("Error al registrar el cliente en la base de datos.");
            }
    
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error al registrar el cliente en la base de datos.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    
        return idCliente; // Devolver el ID del cliente registrado (o -1 si no se pudo registrar)
    } 